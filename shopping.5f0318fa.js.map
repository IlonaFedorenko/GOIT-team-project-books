{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-7c0e733a4344ff8e.js","node_modules/@parcel/runtime-js/lib/runtime-b72456753751e934.js","node_modules/@parcel/runtime-js/lib/runtime-d73151a872e63687.js","node_modules/@parcel/runtime-js/lib/runtime-3378bb5461c1bd01.js","node_modules/@parcel/runtime-js/lib/runtime-643dfc921be0cb37.js","src/js/shopping-list.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"7nZc1\\\":\\\"shopping.5f0318fa.js\\\",\\\"1yVwl\\\":\\\"amazon.15190360.png\\\",\\\"bYYsk\\\":\\\"appleshop.1347d55f.png\\\",\\\"hiPvQ\\\":\\\"boockshop.96bb4e3e.png\\\",\\\"lp5u4\\\":\\\"sprite.9905b075.svg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1yVwl\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bYYsk\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hiPvQ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lp5u4\")).toString();","const shoppingList = document.querySelector('.shopping-list');\nconst shoppingListEmptyEl = document.querySelector('.shopping-list-empty');\n\nimport Amazon from '../images/amazon.png';\nimport Apple from '../images/appleshop.png';\nimport Bookshop from '../images/boockshop.png';\nimport Trash from '../images/sprite.svg';\n\n//Pagination\nconst easyPagination = ({\n  items,\n  rows = 10,\n  handlePaginatedItems,\n  buttonsWrapper,\n  buttonsContainerClass = 'pagination',\n  buttonClass = 'page-link',\n  nextClass = 'page-link',\n  prevClass = 'page-link',\n  nextText = '>',\n  prevText = '<',\n  firstClass = 'page-link',\n  firstText = '<<',\n  lastClass = 'page-link',\n  lastText = '>>',\n  activeClass = 'active',\n}) => {\n  if (!items) {\n    console.error('items not defined. Send {items: ...} as a parameter.');\n    return false;\n  }\n\n  const generateUID = () => {\n    var firstPart = (Math.random() * 46656) | 0;\n    var secondPart = (Math.random() * 46656) | 0;\n    firstPart = ('000' + firstPart.toString(36)).slice(-3);\n    secondPart = ('000' + secondPart.toString(36)).slice(-3);\n    return firstPart + secondPart;\n  };\n\n  const createPaginationButtons = ({ wrapper }) => {\n    let paginationButtons = document.createElement('div');\n\n    paginationButtons.classList.add(\n      'pagination-' + uuid,\n      buttonsContainerClass\n    );\n\n    let paginationButton = page => {\n      let button = document.createElement('button');\n      button.setAttribute('type', 'button');\n      button.classList.add(buttonClass);\n\n      if (currentPage === page) button.classList.add(activeClass);\n\n      button.innerHTML = page;\n\n      button.addEventListener('click', function () {\n        currentPage = page;\n\n        self.paginate(currentPage, false);\n\n        let current_btn = getActiveBtn();\n        current_btn.classList.remove('active');\n\n        button.classList.add('active');\n      });\n\n      return button;\n    };\n\n    let prevNextBtns = () => {\n      let prevBtn = document.createElement('button');\n      prevBtn.setAttribute('type', 'button');\n      prevBtn.classList.add('page-link');\n      prevBtn.classList.add('prevClass');\n      prevBtn.innerHTML = prevText;\n\n      let nextBtn = document.createElement('button');\n      nextBtn.setAttribute('type', 'button');\n      nextBtn.classList.add('page-link');\n      nextBtn.classList.add('nextClass');\n      nextBtn.innerHTML = nextText;\n\n      // let firstBtn = document.createElement('button');\n      // firstBtn.setAttribute('type', 'button');\n      // firstBtn.classList.add('page-link');\n      // firstBtn.classList.add('firstClass');\n      // firstBtn.innerHTML = firstText;\n\n      // let lastBtn = document.createElement('button');\n      // lastBtn.setAttribute('type', 'button');\n      // lastBtn.classList.add('page-link');\n      // lastBtn.classList.add('lastClass');\n      // lastBtn.innerHTML = lastText;\n\n      prevBtn.addEventListener('click', () => {\n        self.prev();\n      });\n\n      nextBtn.addEventListener('click', () => {\n        self.next();\n      });\n\n      // firstBtn.addEventListener('click', () => {\n      //   self.first();\n      // });\n      // lastBtn.addEventListener('click', () => {\n      //   self.last();\n      // });\n\n      return { prevBtn, nextBtn };\n    };\n\n    const { prevBtn, nextBtn } = prevNextBtns();\n\n    // paginationButtons.appendChild(firstBtn);\n    paginationButtons.appendChild(prevBtn);\n\n    for (let i = 1; i < pageCount + 1; i++) {\n      let btn = paginationButton(i);\n      paginationButtons.appendChild(btn);\n    }\n\n    paginationButtons.appendChild(nextBtn);\n    // paginationButtons.appendChild(lastBtn);\n\n    wrapper.appendChild(paginationButtons);\n  };\n\n  const getAllBtns = () => {\n    return document.querySelectorAll(`.${'pagination-' + uuid} button`);\n  };\n\n  const getActiveBtn = () => {\n    return document.querySelector(`.${'pagination-' + uuid} button.active`);\n  };\n\n  const uuid = generateUID();\n  rows = parseInt(rows);\n  let currentPage = 1;\n  let pageCount = Math.ceil(items.length / rows);\n  const hasButtons = typeof buttonsWrapper != 'undefined';\n\n  const self = {\n    paginate: (page = 1, loadButtons = true) => {\n      page--;\n\n      let start = rows * page;\n      let end = start + rows;\n      let paginatedItems = items.slice(start, end);\n\n      if (loadButtons && buttonsWrapper)\n        createPaginationButtons({\n          wrapper: document.querySelector(buttonsWrapper),\n        });\n\n      if (handlePaginatedItems) {\n        handlePaginatedItems(paginatedItems);\n      } else return paginatedItems;\n    },\n    // first: () => {\n    //   if (currentPage === 0) return;\n    //   currentPage = 0;\n    //   let page = currentPage;\n    //   let start = rows * page;\n    //   let end = start + rows;\n    //   let paginatedItems = items.slice(start, end);\n\n    //   if (hasButtons) {\n    //     let current_btn = getActiveBtn();\n    //     if (currentPage != 0) {\n    //       current_btn.classList.remove('active');\n    //       current_btn.nextElementSibling.classList.add('active');\n    //     }\n    //   }\n\n    //   if (handlePaginatedItems) {\n    //     handlePaginatedItems(paginatedItems);\n    //   } else return paginatedItems;\n    // },\n    // last: () => {\n    //   if (currentPage === pageCount) return;\n    //   currentPage = pageCount - 1;\n    //   let page = currentPage;\n    //   let start = rows * page;\n    //   let end = start + rows;\n    //   let paginatedItems = items.slice(start, end);\n\n    //   if (hasButtons) {\n    //     let current_btn = getActiveBtn();\n\n    //     current_btn.classList.remove('active');\n    //     current_btn.nextElementSibling.classList.add('active');\n    //   }\n\n    //   if (handlePaginatedItems) {\n    //     handlePaginatedItems(paginatedItems);\n    //   } else return paginatedItems;\n    // },\n    next: () => {\n      if (currentPage >= pageCount) return;\n      currentPage++;\n      let page = currentPage - 1;\n      let start = rows * page;\n      let end = start + rows;\n      let paginatedItems = items.slice(start, end);\n\n      if (hasButtons) {\n        let current_btn = getActiveBtn();\n        current_btn.classList.remove('active');\n        current_btn.nextElementSibling.classList.add('active');\n      }\n\n      if (handlePaginatedItems) {\n        handlePaginatedItems(paginatedItems);\n      } else return paginatedItems;\n    },\n    prev: () => {\n      if (currentPage === 1) return;\n      currentPage--;\n\n      let page = currentPage - 1;\n      let start = rows * page;\n      let end = start + rows;\n      let paginatedItems = items.slice(start, end);\n\n      if (hasButtons) {\n        let currentButton = getActiveBtn();\n        currentButton.classList.remove('active');\n        currentButton.previousElementSibling.classList.add('active');\n      }\n\n      if (handlePaginatedItems) {\n        handlePaginatedItems(paginatedItems);\n      } else return paginatedItems;\n    },\n    changeRows: (newRows = 10) => {\n      rows = parseInt(newRows);\n      document.querySelector('.pagination-' + uuid).remove();\n      self.paginate(currentPage);\n    },\n    changeItems: newItems => {\n      if (!newItems) return false;\n\n      document.querySelector('.pagination-' + uuid)?.remove();\n\n      items = newItems;\n      pageCount = Math.ceil(items.length / rows);\n      currentPage = 1;\n\n      self.paginate(1);\n    },\n  };\n\n  return self;\n};\n//Pagination^^^^^^^^\n\nconst paginationEl = document.getElementById('pagination');\n\nlet booksArray = JSON.parse(localStorage.getItem('shopping-trash'));\n\nappendShoppingListMarkup();\n\nfunction createShoppingList(booksArray) {\n  return booksArray.reduce((acc, item) => {\n    return (\n      acc +\n      ` <div class=\"book-card\" id=\"${item._id}\">\n        <div class=\"shopping-list-img\">\n        <img\n          class=\"book-img\"\n          src=\"${item.book_image}\"\n          alt=\"${item.title}\"\n          loading=\"lazy\"\n        />\n      </div>\n      <div class=\"info\">\n        <div class=\"first-info-div\">\n          <div>\n            <p class=\"book-name\">${item.title}</p>\n            <p class=\"book-category\">${item.list_name}</p>\n          </div>\n          <button class=\"remove-book\">\n            <svg class=\"trash-icon\" width=\"16\" height=\"16\"><use href=\"${Trash}#trash\"></use></svg>\n          </button>\n        </div>\n        <div class=\"second-info-div\">\n          <p class=\"book-description\">\n           ${item.description}\n          </p>\n        </div>\n        <div class=\"third-info-div\">\n          <div>\n            <p class=\"book-author\">\n            ${item.author}\n            </p>\n          </div>\n          <div class=\"shop-list-div\">\n          <ul class=\"shop-list\">\n               <li class=\"shop-item\">\n              <a class=\"shop-link\" href=\"${item.buy_links[0].url}\" target=\"_blank\"><img class=\"shop-icon amazon-icon\" src=\"${Amazon}\" alt=\"amazon\" width=\"32\" height=\"11\"></a>\n              </li>\n                <li class=\"shop-item\">\n                    <a class=\"shop-link\" href=\"${item.buy_links[1].url}\" target=\"_blank\"><img class=\"shop-icon\" src=\"${Apple}\" alt=\"apple shop\" width=\"16\" height=\"16\"></a>\n                  </li>\n                    <li class=\"shop-item\">\n                        <a class=\"shop-link\" href=\"${item.buy_links[4].url}\" target=\"_blank\" ><img class=\"shop-icon book-shop-icon\" src=\"${Bookshop}\" alt=\"book shop\" width=\"16\" height=\"16\"></a>\n                      </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>`\n    );\n  }, '');\n}\n\nfunction displayPagination() {\n  let items = booksArray;\n  paginationEl.innerHTML = '';\n  const pagination = easyPagination({\n    items,\n    rows: 3,\n    buttonsWrapper: '#pagination',\n    handlePaginatedItems: items => {\n      const list = document.getElementById('list');\n      list.innerHTML = ' ';\n      list.innerHTML = createShoppingList(items);\n    },\n  });\n\n  pagination.paginate();\n}\nfunction appendShoppingListMarkup() {\n  if (booksArray.length !== 0) {\n    displayPagination();\n    shoppingListisFilled();\n  } else {\n    shoppingList.innerHTML = '';\n    paginationEl.innerHTML = '';\n    shoppingListIsEmpty();\n  }\n}\n\nfunction shoppingListIsEmpty() {\n  shoppingListEmptyEl.classList.remove('shopping-list-filled');\n}\n\nfunction shoppingListisFilled() {\n  shoppingListEmptyEl.classList.add('shopping-list-filled');\n}\nshoppingList.addEventListener('click', removeBook);\n\nfunction removeBook(e) {\n\n  if (e.target.nodeName === 'BUTTON') {\n    let _bookId = e.target.closest('.book-card').id;\n\n    // console.log(_bookId);\n    // console.log(booksArray);\n    booksArray.splice(\n      booksArray.findIndex(item => item._id === _bookId),\n      1\n    );\n    // console.log(booksArray);\n\n    let card = document.getElementById(_bookId);\n    // console.log(card);\n    card.remove();\n    localStorage.setItem('shopping-trash', JSON.stringify(booksArray));\n    if (booksArray.length === 0) {\n      shoppingListIsEmpty();\n    }\n    appendShoppingListMarkup();\n  }\n}\n"],"names":["parcelRequire","register","JSON","parse","$41f4bfe0f5168ce2$exports","URL","resolve","url","toString","$1fb24e0fd95bb9b9$exports","$09ba7cbbe33b4d18$exports","$a4212a039eccdb43$exports","$e5c62ffd1c5d842f$var$shoppingList","document","querySelector","$e5c62ffd1c5d842f$var$shoppingListEmptyEl","$e5c62ffd1c5d842f$var$easyPagination","items","rows","handlePaginatedItems","buttonsWrapper","buttonsContainerClass","buttonClass","nextClass","prevClass","nextText","prevText","firstClass","firstText","lastClass","lastText","activeClass","console","error","getActiveBtn","uuid","firstPart","Math","random","secondPart","slice","parseInt","currentPage","pageCount","ceil","length","hasButtons","self","paginate","page","loadButtons","start","end","paginatedItems","wrapper","paginationButtons","createElement","classList","add","paginationButton","button","setAttribute","innerHTML","addEventListener","remove","prevBtn","nextBtn","prev","next","prevNextBtns","appendChild","i","btn","createPaginationButtons","current_btn","nextElementSibling","currentButton","previousElementSibling","changeRows","newRows","changeItems","newItems","$e5c62ffd1c5d842f$var$paginationEl","getElementById","$e5c62ffd1c5d842f$var$booksArray","localStorage","getItem","$e5c62ffd1c5d842f$var$displayPagination","pagination","list","reduce","acc","item","_id","book_image","title","list_name","$parcel$interopDefault","description","author","buy_links","$e5c62ffd1c5d842f$var$appendShoppingListMarkup","$e5c62ffd1c5d842f$var$shoppingListIsEmpty","e","target","nodeName","_bookId","closest","id","splice","findIndex","setItem","stringify"],"version":3,"file":"shopping.5f0318fa.js.map"}